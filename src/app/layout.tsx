// import { Toaster } from '@/components/ui/toaster'
import {
  DatabaseProvider,
  JotaiProvider,
  ScrollProvider,
  SessionProvider,
  ThemeProvider
} from '@/context'
import { authOptions } from '@auth/auth-options'
import type { Metadata } from 'next'
import { getServerSession } from 'next-auth/next'
import { getCsrfToken } from 'next-auth/react'

import { Lato } from 'next/font/google'

import { cn } from '@/lib/utils'

import { Toaster } from '@/components/ui/sonner'
import { TooltipProvider } from '@/components/ui/tooltip'

import '@/styles/globals.output.css'

import { AuthSession } from '@/types/sessions.types'

const fontSans = Lato({
  weight: ['300', '400', '700', '900'],
  style: ['normal', 'italic'],
  display: 'swap',
  subsets: ['latin'],
  variable: '--font-sans'
})
export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app'
}

const fetchCurrentUser = async (session: AuthSession) => {
  const resp = await fetch('https://api.spotify.com/v1/me', {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
      Authorization: `Bearer ${session?.user?.access_token}`
    }
  })
  const data = await resp.json()
  return data
}

const fetchLibrary = async (session: AuthSession) => {
  // return null;
  const resp = await fetch(`${process.env.NEXTAUTH_URL!}api/spotify/library`, {
    method: 'POST',
    body: JSON.stringify({
      token: session?.user?.access_token
    }),
    headers: {
      'Content-Type': 'application/json',
      Authorization: `Bearer ${session?.user?.access_token}`
    }
  })
  const data = await resp.json()
  return data
}

export default async function RootLayout({
  children
}: {
  children: React.ReactNode
}) {
  const token = await getCsrfToken()
  const session: AuthSession | null = await getServerSession(authOptions)
  const user = session && (await fetchCurrentUser(session))

  return (
    <html lang='en' className='scroll-smooth' suppressHydrationWarning>
      <SessionProvider session={session}>
        <JotaiProvider>
          <DatabaseProvider session={session} user={user}>
            <body
              className={cn(
                'bg-background font-sans text-foreground antialiased',
                fontSans.variable
              )}
            >
              <ThemeProvider
                attribute='class'
                defaultTheme='dark'
                enableSystem={false}
              >
                <ScrollProvider>
                  <TooltipProvider delayDuration={0}>
                    {children}
                    {/* <Error /> */}
                    <Toaster />
                  </TooltipProvider>
                </ScrollProvider>
              </ThemeProvider>
            </body>
          </DatabaseProvider>
        </JotaiProvider>
      </SessionProvider>
    </html>
  )
}
